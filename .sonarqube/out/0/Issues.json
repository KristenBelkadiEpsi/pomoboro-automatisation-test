{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Compilateur Microsoft (R) Visual C#",
        "version": "4.10.0.0",
        "fileVersion": "4.10.0-3.24216.12 (3af0081a)",
        "semanticVersion": "4.10.0",
        "language": "fr-FR"
      },
      "results": [
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Le propriété 'Type' non-nullable doit contenir une valeur non-null lors de la fermeture du constructeur. Envisagez de déclarer le propriété comme nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/debian-kristen/RiderProjects/pomodoro/pomodoro/wwwroot/Models/Session.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 23,
                  "endLine": 7,
                  "endColumn": 27
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/debian-kristen/RiderProjects/pomodoro/pomodoro/wwwroot/Models/Session.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 23,
                  "endLine": 7,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Le champ 'timer' non-nullable doit contenir une valeur non-null lors de la fermeture du constructeur. Envisagez de déclarer le champ comme nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/debian-kristen/RiderProjects/pomodoro/pomodoro/Components/Pages/Home.razor",
                "region": {
                  "startLine": 43,
                  "startColumn": 19,
                  "endLine": 43,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///home/debian-kristen/RiderProjects/pomodoro/pomodoro/Components/Pages/Home.razor",
                "region": {
                  "startLine": 43,
                  "startColumn": 19,
                  "endLine": 43,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make 'sessions' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/debian-kristen/RiderProjects/pomodoro/pomodoro/Components/Pages/Home.razor",
                "region": {
                  "startLine": 41,
                  "startColumn": 27,
                  "endLine": 41,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make 'durationOptions' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/debian-kristen/RiderProjects/pomodoro/pomodoro/Components/Pages/Home.razor",
                "region": {
                  "startLine": 47,
                  "startColumn": 51,
                  "endLine": 47,
                  "endColumn": 66
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6561",
          "level": "warning",
          "message": "Avoid using \"DateTime.Now\" for benchmarking or timespan calculation operations.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/debian-kristen/RiderProjects/pomodoro/pomodoro/Components/Pages/Home.razor",
                "region": {
                  "startLine": 74,
                  "startColumn": 36,
                  "endLine": 74,
                  "endColumn": 76
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6561",
          "level": "warning",
          "message": "Avoid using \"DateTime.Now\" for benchmarking or timespan calculation operations.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/debian-kristen/RiderProjects/pomodoro/pomodoro/Components/Pages/Home.razor",
                "region": {
                  "startLine": 104,
                  "startColumn": 94,
                  "endLine": 104,
                  "endColumn": 120
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6608",
          "level": "warning",
          "message": "Indexing at Count-1 should be used instead of the \"Enumerable\" extension method \"Last\"",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/debian-kristen/RiderProjects/pomodoro/pomodoro/Components/Pages/Home.razor",
                "region": {
                  "startLine": 74,
                  "startColumn": 18,
                  "endLine": 74,
                  "endColumn": 22
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6608",
          "level": "warning",
          "message": "Indexing at Count-1 should be used instead of the \"Enumerable\" extension method \"Last\"",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/debian-kristen/RiderProjects/pomodoro/pomodoro/Components/Pages/Home.razor",
                "region": {
                  "startLine": 74,
                  "startColumn": 60,
                  "endLine": 74,
                  "endColumn": 64
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'selectedDuration'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/debian-kristen/RiderProjects/pomodoro/pomodoro/Components/Pages/Home.razor",
                "region": {
                  "startLine": 18,
                  "startColumn": 9,
                  "endLine": 18,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CS8618": {
          "id": "CS8618",
          "shortDescription": "Un champ non-nullable doit contenir une valeur non-null lors de la fermeture du constructeur. Envisagez de déclarer le champ comme nullable.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8618)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "S1481": {
          "id": "S1481",
          "shortDescription": "Unused local variables should be removed",
          "fullDescription": "An unused local variable is a variable that has been declared but is not used anywhere in the block of code where it is defined. It is dead code, contributing to unnecessary complexity and leading to confusion when reading the code. Therefore, it should be removed from your code to maintain clarity and efficiency.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1481",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2933": {
          "id": "S2933",
          "shortDescription": "Fields that are only assigned in the constructor should be \"readonly\"",
          "fullDescription": "readonly fields can only be assigned in a class constructor. If a class has a field that’s not marked readonly but is only set in the constructor, it could cause confusion about the field’s intended use. To avoid confusion, such fields should be marked readonly to make their intended use explicit, and to prevent future maintainers from inadvertently changing their use.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2933",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S6561": {
          "id": "S6561",
          "shortDescription": "Avoid using \"DateTime.Now\" for benchmarking or timing operations",
          "fullDescription": "The rule targets the use of DateTime.Now call followed by some arithmetic operation.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-6561",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S6608": {
          "id": "S6608",
          "shortDescription": "Prefer indexing instead of \"Enumerable\" methods on types implementing \"IList\"",
          "fullDescription": "Indexes in C# provide direct access to an element at a specific position within an array or collection. When compared to Enumerable methods, indexing can be more efficient for certain scenarios, such as iterating over a large collection, due to avoiding the overhead of checking the underlying collection type before accessing it.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-6608",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}