@page "/"
@using pomodoro.Models
@inject IJSRuntime JSRuntime
@rendermode InteractiveServer


<h1>Pomodoro Timer</h1>
<h2>(commençant toujours par le travail)</h2>
<input type="radio" checked="@(SelectedMode == TypePomodoro.TP_25_5)" name="type de pomodoro" @onchange="() => UpdateTypePomodoro(TypePomodoro.TP_25_5)"/>
<label>25/5</label>
<p></p>
<input type="radio" checked="@(SelectedMode == TypePomodoro.TP_45_15)" name="type de pomodoro" @onchange="() => UpdateTypePomodoro(TypePomodoro.TP_45_15)"/>
<label>45/15</label>
<p></p>
<button @onclick="Start">Lancer</button>
<button>Mettre en pause</button>
<button>Réinitialiser</button>
<p>time left: @TimeLeft.ToString()</p>
<h3>Historique</h3>
<ul>
    @foreach (var step in Historic)
    {
        <li></li>
    }
</ul>

@code
{
    public TimeSpan TimeLeft = TimeSpan.FromMinutes(25);
    public Timer Timer;
    public List<String> Historic;
    public bool IsTimerRunning = false;
    public bool isWorking = true;
    public TimeSpan TotalTime = TimeSpan.FromHours(0);
    [Parameter] public TypePomodoro SelectedMode { get; set; }


    public Home()
    {
    }

    public void UpdateTypePomodoro(TypePomodoro t)
    {
        SelectedMode = t;
        if (SelectedMode is TypePomodoro.TP_25_5)
        {
            TimeLeft = TimeSpan.FromMinutes(25);
        }
        else
        {
            TimeLeft = TimeSpan.FromMinutes(45);
        }
    }

    private void Start()
    {
        if (!IsTimerRunning)
        {
            Timer = new Timer(async (_) =>
            {
                await InvokeAsync(Update);
                // await InvokeAsync(StateHasChanged);
            }, null, TimeSpan.Zero, TimeSpan.FromSeconds(1));
            Historic.Add();
            IsTimerRunning = true;
        }
    }

    public void UpdateTotalWorkTime()
    {
        TotalTime = TotalTime + 
    }

    public void StopTimer()
    {
        Timer?.Dispose();
        IsTimerRunning = false;
        UpdateTotalWorkTime();
    }

    private void Update()
    {
        if (TimeLeft.TotalSeconds > 0)
        {
            TimeLeft = TimeLeft - TimeSpan.FromSeconds(1);
        }
        else
        {
            JSRuntime.InvokeVoidAsync("alert", "le timer est fini !");
            StopTimer();
            if (SelectedMode == TypePomodoro.TP_25_5)
            {
                if (isWorking)
                {
                    TimeLeft = TimeSpan.FromMinutes(5);
                }
                else
                {
                    TimeLeft = TimeSpan.FromMinutes(25);
                }
            }
            else
            {
                if (isWorking)
                {
                    TimeLeft = TimeSpan.FromMinutes(15);
                }
                else
                {
                    TimeLeft = TimeSpan.FromMinutes(45);
                }
            }
        }
    }
}